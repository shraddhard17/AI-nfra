# -*- coding: utf-8 -*-
"""Untitled3.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1rop5bqFsJ_H_TMeH-SEWVSdBTO4_yXI4
"""

import pandas as pd
import nltk
from nltk.corpus import stopwords
from sklearn.model_selection import train_test_split
from sklearn.feature_extraction.text import CountVectorizer

# Download stopwords if not already downloaded
nltk.download('stopwords')
stop_words = set(stopwords.words('english'))

def preprocess_text(text):
    # Check if text is a string before applying lower()
    if isinstance(text, str):
        text = text.lower().replace('[^\w\s]', '')
        return ' '.join([word for word in text.split() if word not in stop_words])
    # Handle non-string values (e.g., NaN)
    else:
        return ''  # Or any other suitable handling for non-string values

df = pd.read_csv('sentiment_data.csv')
df = df[['text', 'sentiment']]  # Ensure columns 'text' and 'sentiment'
df['cleaned_text'] = df['text'].apply(preprocess_text)

df.head()

X_train, X_test, y_train, y_test = train_test_split(df['cleaned_text'], df['sentiment'], test_size=0.2, random_state=42)

vectorizer = CountVectorizer()
X_train_vec = vectorizer.fit_transform(X_train)
X_test_vec = vectorizer.transform(X_test)

from sklearn.naive_bayes import MultinomialNB
from sklearn.metrics import accuracy_score

model = MultinomialNB()
model.fit(X_train_vec, y_train)

predictions = model.predict(X_test_vec)
print("Accuracy:", accuracy_score(y_test, predictions))

X_test['predicted_sentiment'] = predictions
X_test.to_csv('predicted_sentiments.csv', index=False)